let req = new XMLHttpRequest();
req.open('GET','https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json',true);
req.send();
req.onload = function() {
  const json = JSON.parse(req.responseText);
  console.log(JSON.stringify(json['data']));
  
  const h = 550;
  const w = 1.5 * h;
  const padding = 30;
  const dataset = json['data'];
  const max = d3.max(json['data'],(d) => d[1]);
  const min = d3.min(json['data'],(d) => d[1]);
  const xScale = d3.scaleLinear().domain([1947, 2016]).range([2 * padding, 2 * padding + w]);
  const yScale = d3.scaleLinear().domain([22000, 0]).range([padding, padding + h]);
  
  console.log(xScale(1947));
  console.log(xScale(2016));
  
  const xAxis = d3.axisBottom(xScale).tickFormat(d3.format("d"));
  const yAxis = d3.axisLeft(yScale);
  
  console.log(JSON.stringify(max));

  const svg = d3.select('#chart-box')
                .append('svg')
                .attr('height', h + 2 * padding)
                .attr('width', w + 4 * padding)
                .attr('id', 'svg-chart');

  svg.selectAll('rect')
    .data(dataset)
    .enter()
    .append('rect')
    .attr('class', 'bar');
  
  let linearGradient1 = svg.append('defs')
                          .append('linearGradient')
                          .attr('id','gradient-1');
  
  linearGradient1.append('stop')
                .attr('offset', '0%')
                .attr('stop-color','#1c7530');
  linearGradient1.append('stop')
                .attr('offset', '50%')
                .attr('stop-color','#28a745');
  linearGradient1.append('stop')
                .attr('offset', '100%')
                .attr('stop-color','#1c7530');
  
  let linearGradient2 = svg.append('defs')
                          .append('linearGradient')
                          .attr('id','gradient-2');
  
  linearGradient2.append('stop')
                .attr('offset', '0%')
                .attr('stop-color','#eb8f98');
  linearGradient2.append('stop')
                .attr('offset', '50%')
                .attr('stop-color','#dc3545');
  linearGradient2.append('stop')
                .attr('offset', '100%')
                .attr('stop-color','#eb8f98');
  
  let tooltip = d3.select('#root')
                  .append('div')
                  .attr('id','tooltip')
                  .style('display','none');
  
  tooltip.append('h2').attr('id','tooltip-title');
  
  tooltip.append('p').attr('id','tooltip-value');
  
  svg.selectAll('rect')
    .attr("x", (d, i) => (2 * padding + i * 3))
    .attr("y", (d) => h - d[1]/40 + padding)
    .attr("width", 3)
    .attr("height", (d) => d[1]/40)
    .attr('data-date', (d) => d[0])
    .attr('data-gdp', (d) => d[1])
    .on('mouseover', (d) => {
    tooltip.style('display','flex')
      .style('flex-direction', 'column')
      .style('justify-content', 'center')
      .style('align-items', 'center')
      .style("left", (d3.event.pageX) + 20 + "px") //check docs
      .style("top", (d3.event.pageY - 28) + "px") //check docs
      .attr('data-date', d[0]);
    let titleString = extractYear(d[0]);
    d3.select('#tooltip-title').text(titleString);
    let valueFormat = d3.format("($,.1f");
    d3.select('#tooltip-value').text(`${valueFormat(d[1])} billion`); //check docs
  }).on('mouseout', (d) => {
    tooltip.style('display','none')
      .attr('data-date', '')
  });
  
  svg.append('g')
    .attr('transform',`translate(0, ${h + padding})`)
    .attr('id','x-axis')
    .call(xAxis);
  
  svg.append('g')
    .attr('transform',`translate(${2 * padding}, 0)`)
    .attr('id','y-axis')
    .call(yAxis);
  
  svg.append('text')
    .attr('id','y-label')
    .text('billions of US dollars')
    .attr('x',padding)
    .attr('y',padding)
    .attr('transform',`translate(${padding+10}, 10)`);
};

function extractYear(str) {
  let partSet = str.split('-');
  console.log(partSet);
  let result;
  switch(partSet[1]){
    case '01':
      result = `${partSet[0]} Q1`;
      break;
    case '04':
      result = `${partSet[0]} Q2`;
      break;
    case '07':
      result = `${partSet[0]} Q3`;
      break;
    case '10':
      result = `${partSet[0]} Q4`;
      break;
  }
  return result;
}